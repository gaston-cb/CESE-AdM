Preguntas orientadoras 
--------------------------------------
1) Describa brevemente los diferentes perfiles de familias de
microprocesadores/microcontroladores de ARM. Explique alguna de sus diferencias
características.
rta: Hay tres perfiles que son A, R y M. 
Los cortex de la familia A están destinados a aplicaciones de propósito general que corren encima de un sistema operativo. 
Puede procesar muchas cosas al mismo tiempo y el procesamiento es no determinista. Por 
Tiene memoria cache 
ejemplo un telefono con android.  
Cortex R: destinados a sistemas de tiempo real duro. Es decir deben garantizar el tiempo de lanzamiento de una tarea mediante una cantidad
de ciclos determinado o menor. Alta capacidad de procesamiento y baja latencia  
Cortex M: Destinado a microcontroladores y dispositivos de consumo masivo, tienen alta densidad de código
	  Tiene bajo consumo. 
-------------------------------------------------------------------------------------------
					CORTEX M 
-------------------------------------------------------------------------------------------
1)  Describa brevemente las diferencias entre las familias de procesadores Cortex M0, M3 y
M4.
rta: Los procesadores cortex M0 poseen bajo consumo y bajo costo. Los procesadores M3 y M4, poseen funcionalidades para DSP. Las instrucciones
de M0 son de 16 bits y de la familia M3 y M4 pertenes a instrucciones de 32 bits. 
El cortex M4 posee hardware para correr un SO real en forma segura
El cortex M4 posee niveles de ejecución de privilegios(el m0 no tiene)
2) ¿Por qué se dice que el set de instrucciones Thumb permite mayor densidad de código? Explique 
La densidad de código se entiende como la realización de una tareas con un tamaño de programa pequeño. 
El set de instrucciones de Thumb permite realizar instrucciones de 32/16 bits y el ensamblador es quien decide que tipo de instrucción utilizar. Esto implica
que para un conjunto de tareas que se deben realizar, hay instrucciones que van a requerir menos instrucciones de codificacion y esto resulta en 
una mejor densidad de código. 

3)¿Qué entiende por arquitectura load-store? ¿Qué tipo de instrucciones no posee este
tipo de arquitectura? 
Los procesadores ARM, no pueden trabajar directamente sobre la memoria. Por ejemplo, para incrementa en uno un valor almacenado en memoria, 
los pasos debén ser los siguientes en arm: "leer memoria y guardar en registro" - "incrementar el valor de registro en uno" - "volver a cargar
el valor en memoria" 
Los operandos son siempre registros del microcontrolador. 